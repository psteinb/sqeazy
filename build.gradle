plugins { id "com.jfrog.bintray" version "1.0" }

import org.apache.tools.ant.taskdefs.condition.Os

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'maven'
apply plugin: 'maven-publish'

// Build natives:
task buildnative(type:Exec) {
	workingDir '.'

	if (Os.isFamily(Os.FAMILY_WINDOWS)) 
  	{
		commandLine 'cmd', '/c', 'buildnatives.bat'
	} 
	else if (Os.isFamily(Os.FAMILY_MAC)) 
	{
		commandLine './buildnative.sh'
	} 
	else if (Os.isFamily(Os.FAMILY_UNIX)) 
	{
		commandLine './buildnative.sh'
	}
}

build.dependsOn buildnative


//***********************************************************************************
// JAVA CODE BUILDING

sourceSets
{
	main
	{
		java
		{ srcDir 'src/java/src' }
		resources
		{  srcDir 'src/java/src' }
	}
	test
	{
		java
		{ srcDir 'src/java/src' }
		resources
		{  srcDir 'src/java/src' }
	}
}

sourceCompatibility = 1.6

test
{
	testLogging.showStandardStreams = true
	testLogging
	{ events "passed", "skipped", "failed" }

	exclude '**/demo/**'
	exclude '**/run/**'

	maxHeapSize = "4G"
}

dependencies
{

	compile group: 'commons-collections', name: 'commons-collections', version: '3.2.1'
	compile group: 'commons-lang', name: 'commons-lang', version: '2.6'
	compile group: 'commons-io', name: 'commons-io', version: '2.4'
	compile group: 'org.apache.commons', name: 'commons-math3', version: '3.4.1'
	compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.1'
	compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.1'

	compile 'net.sf.trove4j:trove4j:3.0.3'
	compile 'com.nativelibs4java:bridj:0.7.0'

	compile group: 'junit', name: 'junit', version: '4.11'
	testCompile group: 'junit', name: 'junit', version: '4.11'
}

repositories
{
	mavenCentral()
	maven
	{ url "http://oss.sonatype.org/content/groups/public" }
}


task sourcesJar(type: Jar, dependsOn:classes) {
	classifier = 'sources'
	from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn:javadoc) {
	classifier = 'javadoc'
	from javadoc.destinationDir
}

if (JavaVersion.current().isJava8Compatible()) {
	allprojects {
		tasks.withType(Javadoc) {
			options.addStringOption('Xdoclint:none', '-quiet')
		}
	}
}

//***********************************************************************************
// PUBLISHING


group = 'net.coremem'
version = '0.1.0'

artifacts
{
	archives sourcesJar
	archives javadocJar
}

publishing {
	publications {
		maven(MavenPublication) {
			from components.java
			artifact sourcesJar { classifier "sources" }
		}
	}
}

if(hasProperty('bintray_user') && hasProperty('bintray_key') )
{
	bintray {

		// property must be set in ~/.gradle/gradle.properties
		user = bintray_user
		key =  bintray_key

		publications = [
			'maven'] //When uploading configuration files
		dryRun = false //Whether to run this as dry-run, without deploying
		publish = true //If version should be auto published after an upload
		pkg {
			repo = 'CoreMem'
			userOrg = 'rtlib' //An optional organization name when the repo belongs to one of the user's orgs
			name = 'CoreMem'
			desc = 'CoreMem'
			websiteUrl = 'https://github.com/RTlib/CoreMem'
			issueTrackerUrl = 'https://github.com/RTlib/CoreMem/issues'
			vcsUrl = 'https://github.com/RTlib/CoreMem.git'
			//licenses = ['Apache-2.0']
			labels = [
				'Native Memory',
				'Memory Mapping',
				'GC',
				'Off-heap memory'
			]
			publicDownloadNumbers = true
			//attributes= ['a': ['ay1', 'ay2'], 'b': ['bee'], c: 'cee'] //Optional package-level attributes
			//Optional version descriptor
			version {
				name = project.version //Bintray logical version name
				desc = '.'
				released  = new java.util.Date()
				vcsTag = project.version
				/*attributes = ['gradle-plugin': 'com.use.less:com.use.less.gradle:gradle-useless-plugin'] //Optional version-level attributes
				 gpg {
				 sign = false //Determines whether to GPG sign the files. The default is false
				 passphrase = 'passphrase' //Optional. The passphrase for GPG signing'
				 }
				 mavenCentralSync {
				 sync = false //Optional (true by default). Determines whether to sync the version to Maven Central.
				 user = 'userToken' //OSS user token
				 password = 'paasword' //OSS user password
				 close = '1' //Optional property. By default the staging repository is closed and artifacts are released to Maven Central. You can optionally turn this behaviour off (by puting 0 as value) and release the version manually.
				 }  /**/          
			}
		}
		/**/
	}
}











